{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppNameOrchestrator": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Orchestrator Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "southafricanorth",
        "southafricawest"
      ],
      "metadata": {
        "description": "Location of all the Logic Apps."
      }
    },
    "servicebus_1_Connection_Name": {
      "type": "string",
      "defaultValue": "servicebus",
      "metadata": {
        "description": "Azure Service Bus Connection Name in Logic App"
      }
    },
    "servicebus_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "aisasync-ns",
      "metadata": {
        "description": "Azure Service Bus Display Name in Logic App"
      }
    },
    "servicebus_1_namespace": {
      "type": "string",
      "defaultValue": "aisasync-ns",
      "metadata": {
        "description": "Azure Service Bus Namespace"
      }
    },
    "servicebus_1_queueName": {
      "type": "string",
      "defaultValue": "customer-queue",
      "metadata": {
        "description": "Azure Service Bus Queue"
      }
    },
    "servicebus_1_resourceGroupName": {
      "type": "string",
      "defaultValue": "ais-async-rg",
      "metadata": {
        "description": "Azure Service Bus Resource Group"
      }
    },
    "servicebus_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Service Bus Connection String"
      }
    },
    "diagnosticSettings_name": {
      "type": "string",
      "defaultValue": "service",
      "metadata": {
        "description": "Diagnostic Setting"
      }
    },
    "diagnosticSettings_resourceGroupName": {
      "type": "string",
      "defaultValue": "ais-async-rg",
      "metadata": {
        "description": "Resource Group of the Log Analytics Workspace"
      }
    },
    "diagnosticSettings_workspaceName": {
      "type": "string",
      "defaultValue": "aisasync-ws",
      "metadata": {
        "description": "Log Analytics Workspace"
      }
    },
    "logicAppNameProcessor": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Processor Logic App."
      }
    },
    "documentdb_1_Connection_Name": {
      "type": "string",
      "defaultValue": "documentdb",
      "metadata": {
        "description": "Cosmos DB Connection Name in Logic App"
      }
    },
    "documentdb_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "aisasyncosmos-acc",
      "metadata": {
        "description": "Cosmos DB Connection Display Name in Logic App"
      }
    },
    "documentdb_1_databaseAccount": {
      "type": "string",
      "metadata": {
        "description": "Name of the account without 'documents.azure.com' part"
      },
      "defaultValue": "aisasyncosmos-acc"
    },
    "documentdb_1_databaseName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Cosmos DB database"
      },
      "defaultValue": "aisasync-db"
    },
    "documentdb_1_containerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Cosmos DB container"
      },
      "defaultValue": "customer-con"
    },
    "documentdb_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "The Cosmos DB Account Primary or Secondary Key"
      }
    },
    "azureeventgrid_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureeventgrid",
      "metadata": {
        "description": "Azure Event Grid Connection Name in Logic App"
      }
    },
    "azureeventgrid_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "aisasync-eventgrid",
      "metadata": {
        "description": "Azure Event Grid Connection Display Name in Logic App"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppNameOrchestrator')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicAppOrchestrator"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Send_message": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "ContentData": "@{base64(outputs('Compose_Queue_Message'))}"
                },
                "path": "/@{encodeURIComponent(encodeURIComponent(variables('servicebusQueue')))}/messages",
                "queries": {
                  "systemProperties": "None"
                }
              },
              "runAfter": {
                "Compose_Queue_Message": [
                  "Succeeded"
                ]
              }
            },
            "Compose_Queue_Message": {
              "type": "Compose",
              "inputs": {
                "message": "@triggerBody()",
                "id": "@{guid()}"
              },
              "runAfter": {
                "Initialize_variable_-_Service_Bus_Queue": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_-_Service_Bus_Queue": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "servicebusQueue",
                    "type": "string",
                    "value": "[parameters('servicebus_1_queueName')]"
                  }
                ]
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]"
      ],
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('diagnosticSettings_name'))]",
          "dependsOn": [
            "[parameters('logicAppNameOrchestrator')]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('diagnosticSettings_name')]",
            "workspaceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticSettings_resourceGroupName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('diagnosticSettings_workspaceName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('servicebus_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'servicebus')]"
        },
        "displayName": "[parameters('servicebus_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('servicebus_1_connectionString')]"
        }
      }
    },
    {
      "name": "[parameters('logicAppNameProcessor')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('documentdb_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]"
      ],
      "tags": {
        "displayName": "LogicAppProcessor"
      },
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Get_messages_from_a_queue_(peek-lock)": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent(encodeURIComponent(variables('servicebusQueue')))}/messages/batch/peek",
                "queries": {
                  "maxMessageCount": 20,
                  "queueType": "Main",
                  "sessionId": ""
                }
              },
              "runAfter": {
                "Initialize_variable_-_Cosmos_DB_Database": [
                  "Succeeded"
                ],
                "Initialize_variable_-_Cosmos_DB_Container": [
                  "Succeeded"
                ],
                "Initialize_variable_-_Service_Bus_Queue": [
                  "Succeeded"
                ]
              }
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@body('Get_messages_from_a_queue_(peek-lock)')",
              "actions": {
                "Create_or_update_document": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": "@items('For_each')?['ContentData']",
                    "path": "/dbs/@{encodeURIComponent(variables('cosmosDBDatabase'))}/colls/@{encodeURIComponent(variables('cosmosDBContainer'))}/docs"
                  },
                  "runAfter": {}
                },
                "Complete_the_message_in_a_queue": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                      }
                    },
                    "method": "delete",
                    "path": "/@{encodeURIComponent(encodeURIComponent(variables('servicebusQueue')))}/messages/complete",
                    "queries": {
                      "lockToken": "@items('For_each')?['LockToken']",
                      "queueType": "Main",
                      "sessionId": ""
                    }
                  },
                  "runAfter": {
                    "Create_or_update_document": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Get_messages_from_a_queue_(peek-lock)": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_variable_-_Service_Bus_Queue": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "servicebusQueue",
                    "type": "string",
                    "value": "[parameters('servicebus_1_queueName')]"
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_variable_-_Cosmos_DB_Database": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "cosmosDBDatabase",
                    "type": "string",
                    "value": "[parameters('documentdb_1_databaseName')]"
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_variable_-_Cosmos_DB_Container": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "cosmosDBContainer",
                    "type": "string",
                    "value": "[parameters('documentdb_1_containerName')]"
                  }
                ]
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_resource_event_occurs": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azureeventgrid_1']['connectionId']"
                  }
                },
                "body": {
                  "properties": {
                    "topic": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('servicebus_1_resourceGroupName'),'/providers/Microsoft.ServiceBus/namespaces/',parameters('servicebus_1_namespace'))]",
                    "destination": {
                      "endpointType": "webhook",
                      "properties": {
                        "endpointUrl": "@{listCallbackUrl()}"
                      }
                    },
                    "filter": {
                      "subjectEndsWith": "customer-queue"
                    }
                  }
                },
                "path": "[concat('/subscriptions/@{encodeURIComponent(''',subscription().subscriptionId,''')}/providers/@{encodeURIComponent(''Microsoft.ServiceBus.Namespaces'')}/resource/eventSubscriptions')]",
                "queries": {
                  "x-ms-api-version": "2017-09-15-preview"
                }
              },
              "splitOn": "@triggerBody()"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_1_Connection_Name')]"
              },
              "documentdb": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'documentdb')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('documentdb_1_Connection_Name'))]",
                "connectionName": "[parameters('documentdb_1_Connection_Name')]"
              },
              "azureeventgrid_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgrid')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureeventgrid_1_Connection_Name'))]",
                "connectionName": "[parameters('azureeventgrid_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('diagnosticSettings_name'))]",
          "dependsOn": [
            "[parameters('logicAppNameProcessor')]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('diagnosticSettings_name')]",
            "workspaceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('diagnosticSettings_resourceGroupName'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('diagnosticSettings_workspaceName'))]",
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('documentdb_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'documentdb')]"
        },
        "displayName": "[parameters('documentdb_1_Connection_DisplayName')]",
        "parameterValues": {
          "databaseAccount": "[parameters('documentdb_1_databaseAccount')]",
          "accessKey": "[parameters('documentdb_1_accessKey')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureeventgrid_1_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'azureeventgrid')]"
        },
        "displayName": "[parameters('azureeventgrid_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}